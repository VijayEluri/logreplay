<project name="dependency-tasks" default="" basedir=".">


	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	  <classpath>
	    <pathelement location="${lib.java.dir}/ant-contrib-1.0b3.jar"/>
	  </classpath>
	</taskdef>

	<!-- config //-->

	<!-- configuration of default locations for groovy home //-->
	<property name="config.win.groovyHome" value="D:\groovy" />
	<property name="config.unix.groovyHome" value="/opt/codehaus/groovy" />

	<condition property="isWindows">
	  <os family="windows"/>
	</condition>
	<target name="config.windows" depends="" if="isWindows">
	  <if>
	    <length string="${env.GROOVY_HOME}" trim="true" when="greater" length="0"/>
	    <then>
	      <property name="config.groovyHome" value="${env.GROOVY_HOME}" />
	    </then>
	    <else>
	      <property name="config.groovyHome" value="${config.win.groovyHome}" />	 
	    </else>
	  </if>
	</target>
	<target name="config.unix" depends="" unless="isWindows">
	  <if>
	    <length string="${env.GROOVY_HOME}" trim="true" when="greater" length="0"/>
	    <then>
	      <property name="config.groovyHome" value="${env.GROOVY_HOME}" />
	    </then>
	    <else>
	      <property name="config.groovyHome" value="${config.unix.groovyHome}" />	 
	    </else>
	  </if>

	</target>
	<target name="config" depends="config.unix, config.windows" />

	<!-- svn.username and svn.password //-->
	<property file="${user.home}/build.dependencies-local.properties" />

	<!-- dependencies that must be built... //-->
	<property file="${basedir}/build.dependencies.properties"/>
		
	<macrodef name="packagedep">
	  <attribute name="dependencyName" />
	  <attribute name="dependencyDir" />
	  
	  <sequential>
		<path id="packagedep.classpath">
	    	  <path refid="classpath.@{dependencyName}" />
	    	  <fileset dir="${config.groovyHome}/lib" includes="*jar" />
		  <fileset dir="${env.ANT_HOME}/lib" includes="**/*jar" />
	  	</path>

		<java classname="org.apache.tools.ant.Main"  classpathref="packagedep.classpath" fork="true" dir="@{dependencyDir}" taskname="startAnt">
                  <arg value="-buildfile" />
                  <arg file="@{dependencyDir}/build.xml" />
                  <arg value="-Djava.home=${java.home}" />
                  <arg value="package" />
            	  <arg value="-Dsvn.revision.number=${svn.revision.number}" />
		</java>
	  </sequential>
	</macrodef>

	<macrodef name="cleandep">
	  <attribute name="dependencyName" />
	  <attribute name="dependencyDir" />

	  <sequential>
		<path id="cleandep.classpath">
	    	  <path refid="classpath.@{dependencyName}" />
	    	  <fileset dir="${config.groovyHome}/lib" includes="*jar" />
		  <fileset dir="${env.ANT_HOME}/lib" includes="**/*jar" />
	  	</path>

		<java classname="org.apache.tools.ant.Main"  classpathref="cleandep.classpath" fork="true" dir="@{dependencyDir}" taskname="startAnt">
                  <arg value="-buildfile" />
                  <arg file="@{dependencyDir}/build.xml" />
                  <arg value="-Djava.home=${java.home}" />
                  <arg value="clean" />
		</java>
	  </sequential>
	</macrodef>

	<!-- dependency checkout //-->
	<taskdef resource="svntask.properties">
	  <classpath>
	    <pathelement location="lib/java/svnant.jar" />
	    <pathelement location="lib/java/svnjavahl.jar" />
	    <pathelement location="lib/java/svnClientAdapter.jar" />
	  </classpath>
	</taskdef>

	<macrodef name="testdep">
	  <attribute name="dependencyName" />
	  <attribute name="dependencyDir" />

	  <sequential>
		<path id="testdep.classpath">
	    	  <path refid="classpath.@{dependencyName}" />
	    	  <fileset dir="${config.groovyHome}/lib" includes="*jar" />
		  <fileset dir="${env.ANT_HOME}/lib" includes="**/*jar" />
	  	</path>

		<java classname="org.apache.tools.ant.Main"  classpathref="testdep.classpath" fork="true" dir="@{dependencyDir}" taskname="startAnt">
                  <arg value="-buildfile" />
                  <arg file="@{dependencyDir}/build.xml" />
                  <arg value="-Djava.home=${java.home}" />
                  <arg value="test" />
		</java>
	  </sequential>
	</macrodef>

	<macrodef name="codep">
	  <attribute name="dependencyName" />
	  <attribute name="repositoryUrl" />
	  <attribute name="dependencyDir" />
	  <attribute name="repositoryUser" />
	  <attribute name="repositoryPassword" />
	  <sequential>
	    <if>
	      <not>
		<available file="@{dependencyDir}" type="dir" />
	      </not>
	      <then>
		<svn username="@{repositoryUser}" password="@{repositoryPassword}"><checkout url="@{repositoryUrl}" destPath="@{dependencyDir}" /></svn>
	      </then>
	      <elseif>
		<isset property="svn.update.dependencies" />
		<then>
		  <svn username="@{repositoryUser}" password="@{repositoryPassword}"><update dir="@{dependencyDir}" /></svn>
		</then>
	      </elseif>
	    </if>
	  </sequential>
	</macrodef>

</project>
